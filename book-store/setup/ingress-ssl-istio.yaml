apiVersion: networking.k8s.io/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    # We allow HTTP and HTTPS
    nginx.ingress.kubernetes.io/ssl-redirect: "false"
    # Instructs the controller to send TLS connections directly 
    #to the backend instead of letting NGINX decrypt the communication
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
    # In some scenarios the exposed URL in the backend service differs
    # from the specified path in the Ingress rule. Without a
    # rewrite any request will return 404
    nginx.ingress.kubernetes.io/rewrite-target: /
    # The name of our ClusterIssuer. We use ACME with 
    # HTTP solver
    cert-manager.io/cluster-issuer: "letsencrypt"
  name: istio-ssl-ingress
  namespace: istio-system
spec:
  rules:
  # Wildcard routing for all exposed istio services. 
  # Kubernetes Fake Certificate will be used if hostname 
  # (SNI) does not match the rules below. 
  - http:
      paths:
      - backend:
          serviceName: istio-ingressgateway
          servicePort: 80
        path: /
  # On base domain we have NGINX running.
  # TODO Deploy Teaser / expose webshell? 
  - host: domain.placeholder
    http:
      paths:
      - backend:
          serviceName: nginx
          servicePort: 80
        path: /
  - host: book.domain.placeholder
    http:
      paths:
      - backend:
          serviceName: istio-ingressgateway
          servicePort: 80
        path: /
  # A valid key and certificate will be created for the entries belows
  # with let's encrypt and the ACME protocol. https://letsencrypt.org/
  tls:
  - hosts:
    - domain.placeholder
    # no SSL certitificate  for book.
    #- book.domain.placeholder
    secretName: domain-tls